{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/praveen-79/machine-learning/blob/main/MACHINE_LEARNING(LOGISTIC_REGRESSION)\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 212,
      "metadata": {
        "id": "6-Wwo-ixQ5EU"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import sklearn\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import LabelEncoder"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df=pd.read_csv(\"/content/final_covid_samples data.csv\")\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "Oa9ulzA0Rc0F",
        "outputId": "2c09c559-4f93-4658-e5e2-88c5f919e00a"
      },
      "execution_count": 213,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    GENDER  AGE   WBC  Platelets  Neutrophils Lymphocytes  Monocytes  \\\n",
              "0        F   70   4.9      145.0          4.0         0.7        0.3   \n",
              "1        M   61  11.3      166.0         10.7         0.5        0.1   \n",
              "2        F   70  15.8      202.0         13.9           1        0.8   \n",
              "3        M   85  10.6      227.0          NaN         NaN        NaN   \n",
              "4        F   89   4.5      170.0          3.8         0.5        0.2   \n",
              "..     ...  ...   ...        ...          ...         ...        ...   \n",
              "274      M   63  14.6      202.0         13.0         0.4        1.2   \n",
              "275      F   89  19.7      158.0          NaN         NaN        NaN   \n",
              "276      M   53   5.3      224.0          3.4         1.4        0.5   \n",
              "277      M   30   8.2      211.0          NaN         NaN        NaN   \n",
              "278      F   82   5.1      166.0          NaN         NaN        NaN   \n",
              "\n",
              "     Eosinophils  Basophils    CRP    AST   ALT   ALP   GGT    LDH  Class  \n",
              "0            0.0        0.0   87.9   68.0  41.0  89.0  63.0  606.0      1  \n",
              "1            0.0        0.0  174.3  118.0  95.0  59.0  77.0  808.0      1  \n",
              "2            0.0        0.0   43.8   20.0  26.0  80.0  16.0  235.0      0  \n",
              "3            NaN        NaN    6.3   31.0  16.0   NaN   NaN    NaN      0  \n",
              "4            0.0        0.0  133.6   57.0  17.0  81.0  19.0  626.0      1  \n",
              "..           ...        ...    ...    ...   ...   ...   ...    ...    ...  \n",
              "274          0.0        0.0  250.6   65.0  87.0  65.0  37.0  416.0      1  \n",
              "275          NaN        NaN    3.0   26.0  17.0   NaN   NaN  275.0      0  \n",
              "276          0.0        0.0    7.8   36.0  41.0   NaN   NaN  263.0      1  \n",
              "277          NaN        NaN   12.4   35.0  41.0  56.0  17.0  209.0      0  \n",
              "278          NaN        NaN  112.6   46.0  17.0  58.0  18.0  524.0      1  \n",
              "\n",
              "[279 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4987a65a-45eb-4cdc-8a69-6923ac61fc1c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>GENDER</th>\n",
              "      <th>AGE</th>\n",
              "      <th>WBC</th>\n",
              "      <th>Platelets</th>\n",
              "      <th>Neutrophils</th>\n",
              "      <th>Lymphocytes</th>\n",
              "      <th>Monocytes</th>\n",
              "      <th>Eosinophils</th>\n",
              "      <th>Basophils</th>\n",
              "      <th>CRP</th>\n",
              "      <th>AST</th>\n",
              "      <th>ALT</th>\n",
              "      <th>ALP</th>\n",
              "      <th>GGT</th>\n",
              "      <th>LDH</th>\n",
              "      <th>Class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>F</td>\n",
              "      <td>70</td>\n",
              "      <td>4.9</td>\n",
              "      <td>145.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>87.9</td>\n",
              "      <td>68.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>89.0</td>\n",
              "      <td>63.0</td>\n",
              "      <td>606.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>M</td>\n",
              "      <td>61</td>\n",
              "      <td>11.3</td>\n",
              "      <td>166.0</td>\n",
              "      <td>10.7</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>174.3</td>\n",
              "      <td>118.0</td>\n",
              "      <td>95.0</td>\n",
              "      <td>59.0</td>\n",
              "      <td>77.0</td>\n",
              "      <td>808.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>F</td>\n",
              "      <td>70</td>\n",
              "      <td>15.8</td>\n",
              "      <td>202.0</td>\n",
              "      <td>13.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>43.8</td>\n",
              "      <td>20.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>235.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>M</td>\n",
              "      <td>85</td>\n",
              "      <td>10.6</td>\n",
              "      <td>227.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.3</td>\n",
              "      <td>31.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>F</td>\n",
              "      <td>89</td>\n",
              "      <td>4.5</td>\n",
              "      <td>170.0</td>\n",
              "      <td>3.8</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>133.6</td>\n",
              "      <td>57.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>81.0</td>\n",
              "      <td>19.0</td>\n",
              "      <td>626.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>274</th>\n",
              "      <td>M</td>\n",
              "      <td>63</td>\n",
              "      <td>14.6</td>\n",
              "      <td>202.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>250.6</td>\n",
              "      <td>65.0</td>\n",
              "      <td>87.0</td>\n",
              "      <td>65.0</td>\n",
              "      <td>37.0</td>\n",
              "      <td>416.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>275</th>\n",
              "      <td>F</td>\n",
              "      <td>89</td>\n",
              "      <td>19.7</td>\n",
              "      <td>158.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>275.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>276</th>\n",
              "      <td>M</td>\n",
              "      <td>53</td>\n",
              "      <td>5.3</td>\n",
              "      <td>224.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>7.8</td>\n",
              "      <td>36.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>263.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>277</th>\n",
              "      <td>M</td>\n",
              "      <td>30</td>\n",
              "      <td>8.2</td>\n",
              "      <td>211.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>12.4</td>\n",
              "      <td>35.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>56.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>209.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>278</th>\n",
              "      <td>F</td>\n",
              "      <td>82</td>\n",
              "      <td>5.1</td>\n",
              "      <td>166.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>112.6</td>\n",
              "      <td>46.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>58.0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>524.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>279 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4987a65a-45eb-4cdc-8a69-6923ac61fc1c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4987a65a-45eb-4cdc-8a69-6923ac61fc1c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4987a65a-45eb-4cdc-8a69-6923ac61fc1c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3c9640ee-83bc-4e70-b21a-da69a9e5d424\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3c9640ee-83bc-4e70-b21a-da69a9e5d424')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3c9640ee-83bc-4e70-b21a-da69a9e5d424 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_6a484981-91e5-4172-a3a3-6f175e280639\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_6a484981-91e5-4172-a3a3-6f175e280639 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 279,\n  \"fields\": [\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 0,\n        \"max\": 98,\n        \"num_unique_values\": 70,\n        \"samples\": [\n          86,\n          70\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"WBC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.855353347526425,\n        \"min\": 1.1,\n        \"max\": 29.2,\n        \"num_unique_values\": 124,\n        \"samples\": [\n          5.8,\n          14.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Platelets\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101.1741776222978,\n        \"min\": 20.0,\n        \"max\": 620.0,\n        \"num_unique_values\": 177,\n        \"samples\": [\n          175.0,\n          109.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Neutrophils\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.1725810312412825,\n        \"min\": 0.5,\n        \"max\": 26.4,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          1.9,\n          4.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lymphocytes\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 34,\n        \"samples\": [\n          \"1.4\",\n          \"1.2\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monocytes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.410048719243348,\n        \"min\": 0.0,\n        \"max\": 3.2,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.3,\n          1.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Eosinophils\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.13223712821580536,\n        \"min\": 0.0,\n        \"max\": 1.3,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.2,\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Basophils\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.039116496960338365,\n        \"min\": 0.0,\n        \"max\": 0.3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.0,\n          0.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CRP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 94.42140575151268,\n        \"min\": 0.1,\n        \"max\": 478.0,\n        \"num_unique_values\": 247,\n        \"samples\": [\n          217.9,\n          85.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AST\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57.61279669584917,\n        \"min\": 11.0,\n        \"max\": 550.0,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          104.0,\n          11.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ALT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 45.5032315025435,\n        \"min\": 9.0,\n        \"max\": 335.0,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          137.0,\n          41.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ALP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 89.08986404475988,\n        \"min\": 34.0,\n        \"max\": 838.0,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          60.0,\n          148.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GGT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 132.70250587445392,\n        \"min\": 10.0,\n        \"max\": 839.0,\n        \"num_unique_values\": 78,\n        \"samples\": [\n          112.0,\n          63.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LDH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 193.98352027296716,\n        \"min\": 98.0,\n        \"max\": 1195.0,\n        \"num_unique_values\": 148,\n        \"samples\": [\n          601.0,\n          1183.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Class\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 213
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['GENDER']=LabelEncoder().fit_transform(df['GENDER'])"
      ],
      "metadata": {
        "id": "ZrZcLKviR36L"
      },
      "execution_count": 214,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "gP3U_cVUSWoJ",
        "outputId": "4c624a23-0480-4945-8c45-7451282432d9"
      },
      "execution_count": 215,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     GENDER  AGE   WBC  Platelets  Neutrophils Lymphocytes  Monocytes  \\\n",
              "0         0   70   4.9      145.0          4.0         0.7        0.3   \n",
              "1         1   61  11.3      166.0         10.7         0.5        0.1   \n",
              "2         0   70  15.8      202.0         13.9           1        0.8   \n",
              "3         1   85  10.6      227.0          NaN         NaN        NaN   \n",
              "4         0   89   4.5      170.0          3.8         0.5        0.2   \n",
              "..      ...  ...   ...        ...          ...         ...        ...   \n",
              "274       1   63  14.6      202.0         13.0         0.4        1.2   \n",
              "275       0   89  19.7      158.0          NaN         NaN        NaN   \n",
              "276       1   53   5.3      224.0          3.4         1.4        0.5   \n",
              "277       1   30   8.2      211.0          NaN         NaN        NaN   \n",
              "278       0   82   5.1      166.0          NaN         NaN        NaN   \n",
              "\n",
              "     Eosinophils  Basophils    CRP    AST   ALT   ALP   GGT    LDH  Class  \n",
              "0            0.0        0.0   87.9   68.0  41.0  89.0  63.0  606.0      1  \n",
              "1            0.0        0.0  174.3  118.0  95.0  59.0  77.0  808.0      1  \n",
              "2            0.0        0.0   43.8   20.0  26.0  80.0  16.0  235.0      0  \n",
              "3            NaN        NaN    6.3   31.0  16.0   NaN   NaN    NaN      0  \n",
              "4            0.0        0.0  133.6   57.0  17.0  81.0  19.0  626.0      1  \n",
              "..           ...        ...    ...    ...   ...   ...   ...    ...    ...  \n",
              "274          0.0        0.0  250.6   65.0  87.0  65.0  37.0  416.0      1  \n",
              "275          NaN        NaN    3.0   26.0  17.0   NaN   NaN  275.0      0  \n",
              "276          0.0        0.0    7.8   36.0  41.0   NaN   NaN  263.0      1  \n",
              "277          NaN        NaN   12.4   35.0  41.0  56.0  17.0  209.0      0  \n",
              "278          NaN        NaN  112.6   46.0  17.0  58.0  18.0  524.0      1  \n",
              "\n",
              "[279 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a229868f-1f2a-4b1b-a0d3-3dd306c1925b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>GENDER</th>\n",
              "      <th>AGE</th>\n",
              "      <th>WBC</th>\n",
              "      <th>Platelets</th>\n",
              "      <th>Neutrophils</th>\n",
              "      <th>Lymphocytes</th>\n",
              "      <th>Monocytes</th>\n",
              "      <th>Eosinophils</th>\n",
              "      <th>Basophils</th>\n",
              "      <th>CRP</th>\n",
              "      <th>AST</th>\n",
              "      <th>ALT</th>\n",
              "      <th>ALP</th>\n",
              "      <th>GGT</th>\n",
              "      <th>LDH</th>\n",
              "      <th>Class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>70</td>\n",
              "      <td>4.9</td>\n",
              "      <td>145.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>87.9</td>\n",
              "      <td>68.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>89.0</td>\n",
              "      <td>63.0</td>\n",
              "      <td>606.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>61</td>\n",
              "      <td>11.3</td>\n",
              "      <td>166.0</td>\n",
              "      <td>10.7</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>174.3</td>\n",
              "      <td>118.0</td>\n",
              "      <td>95.0</td>\n",
              "      <td>59.0</td>\n",
              "      <td>77.0</td>\n",
              "      <td>808.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>70</td>\n",
              "      <td>15.8</td>\n",
              "      <td>202.0</td>\n",
              "      <td>13.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>43.8</td>\n",
              "      <td>20.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>235.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>85</td>\n",
              "      <td>10.6</td>\n",
              "      <td>227.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.3</td>\n",
              "      <td>31.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>89</td>\n",
              "      <td>4.5</td>\n",
              "      <td>170.0</td>\n",
              "      <td>3.8</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>133.6</td>\n",
              "      <td>57.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>81.0</td>\n",
              "      <td>19.0</td>\n",
              "      <td>626.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>274</th>\n",
              "      <td>1</td>\n",
              "      <td>63</td>\n",
              "      <td>14.6</td>\n",
              "      <td>202.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>250.6</td>\n",
              "      <td>65.0</td>\n",
              "      <td>87.0</td>\n",
              "      <td>65.0</td>\n",
              "      <td>37.0</td>\n",
              "      <td>416.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>275</th>\n",
              "      <td>0</td>\n",
              "      <td>89</td>\n",
              "      <td>19.7</td>\n",
              "      <td>158.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>275.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>276</th>\n",
              "      <td>1</td>\n",
              "      <td>53</td>\n",
              "      <td>5.3</td>\n",
              "      <td>224.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>7.8</td>\n",
              "      <td>36.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>263.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>277</th>\n",
              "      <td>1</td>\n",
              "      <td>30</td>\n",
              "      <td>8.2</td>\n",
              "      <td>211.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>12.4</td>\n",
              "      <td>35.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>56.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>209.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>278</th>\n",
              "      <td>0</td>\n",
              "      <td>82</td>\n",
              "      <td>5.1</td>\n",
              "      <td>166.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>112.6</td>\n",
              "      <td>46.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>58.0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>524.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>279 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a229868f-1f2a-4b1b-a0d3-3dd306c1925b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a229868f-1f2a-4b1b-a0d3-3dd306c1925b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a229868f-1f2a-4b1b-a0d3-3dd306c1925b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-33bb03ad-3685-4677-a3a7-490288cffd1a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-33bb03ad-3685-4677-a3a7-490288cffd1a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-33bb03ad-3685-4677-a3a7-490288cffd1a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_5f3f87eb-53aa-442c-97fe-085aa13316f9\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_5f3f87eb-53aa-442c-97fe-085aa13316f9 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 279,\n  \"fields\": [\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 0,\n        \"max\": 98,\n        \"num_unique_values\": 70,\n        \"samples\": [\n          86,\n          70\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"WBC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.855353347526425,\n        \"min\": 1.1,\n        \"max\": 29.2,\n        \"num_unique_values\": 124,\n        \"samples\": [\n          5.8,\n          14.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Platelets\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101.1741776222978,\n        \"min\": 20.0,\n        \"max\": 620.0,\n        \"num_unique_values\": 177,\n        \"samples\": [\n          175.0,\n          109.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Neutrophils\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.1725810312412825,\n        \"min\": 0.5,\n        \"max\": 26.4,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          1.9,\n          4.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lymphocytes\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 34,\n        \"samples\": [\n          \"1.4\",\n          \"1.2\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monocytes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.410048719243348,\n        \"min\": 0.0,\n        \"max\": 3.2,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.3,\n          1.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Eosinophils\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.13223712821580536,\n        \"min\": 0.0,\n        \"max\": 1.3,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.2,\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Basophils\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.039116496960338365,\n        \"min\": 0.0,\n        \"max\": 0.3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.0,\n          0.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CRP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 94.42140575151268,\n        \"min\": 0.1,\n        \"max\": 478.0,\n        \"num_unique_values\": 247,\n        \"samples\": [\n          217.9,\n          85.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AST\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57.61279669584917,\n        \"min\": 11.0,\n        \"max\": 550.0,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          104.0,\n          11.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ALT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 45.5032315025435,\n        \"min\": 9.0,\n        \"max\": 335.0,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          137.0,\n          41.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ALP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 89.08986404475988,\n        \"min\": 34.0,\n        \"max\": 838.0,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          60.0,\n          148.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GGT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 132.70250587445392,\n        \"min\": 10.0,\n        \"max\": 839.0,\n        \"num_unique_values\": 78,\n        \"samples\": [\n          112.0,\n          63.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LDH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 193.98352027296716,\n        \"min\": 98.0,\n        \"max\": 1195.0,\n        \"num_unique_values\": 148,\n        \"samples\": [\n          601.0,\n          1183.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Class\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 215
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "\n",
        "\n",
        "\n",
        "# Replace null values with the mean of each column\n",
        "df['Monocytes'] = df['Monocytes'].replace(np.nan, df['Monocytes'].mean())\n",
        "df['Neutrophils'] = df['Neutrophils'].replace(np.nan, df['Neutrophils'].mean())\n",
        "df['Lymphocytes'] = df['Lymphocytes'].replace(np.nan, df['Lymphocytes'].mean())\n",
        "df['Eosinophils'] = df['Eosinophils'].replace(np.nan, df['Eosinophils'].mean())\n",
        "df['Basophils'] = df['Basophils'].replace(np.nan, df['Basophils'].mean())\n",
        "df['ALP'] = df['ALP'].replace(np.nan, df['ALP'].mean())\n",
        "df['GGT'] = df['GGT'].replace(np.nan, df['GGT'].mean())\n",
        "df['LDH'] = df['LDH'].replace(np.nan, df['LDH'].mean())\n",
        "\n",
        "a = df.isnull().sum()"
      ],
      "metadata": {
        "id": "4ODzSMkFS_QG"
      },
      "execution_count": 241,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "a"
      ],
      "metadata": {
        "id": "DQdgLA8FUGvb",
        "outputId": "2b15e953-fde2-4c1d-dd33-e4a03613d799",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 217,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "GENDER          0\n",
              "AGE             0\n",
              "WBC             2\n",
              "Platelets       2\n",
              "Neutrophils     0\n",
              "Lymphocytes     0\n",
              "Monocytes       0\n",
              "Eosinophils     0\n",
              "Basophils       0\n",
              "CRP             6\n",
              "AST             2\n",
              "ALT            13\n",
              "ALP             0\n",
              "GGT             0\n",
              "LDH             0\n",
              "Class           0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 217
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "bN6aTnU-xlld",
        "outputId": "5a14b751-c98c-46ce-8b32-562a2a549d41"
      },
      "execution_count": 218,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     GENDER  AGE   WBC  Platelets  Neutrophils  Lymphocytes  Monocytes  \\\n",
              "0         0   70   4.9      145.0     4.000000     0.700000   0.300000   \n",
              "1         1   61  11.3      166.0    10.700000     0.500000   0.100000   \n",
              "2         0   70  15.8      202.0    13.900000     1.000000   0.800000   \n",
              "3         1   85  10.6      227.0     6.200478     1.186538   0.605742   \n",
              "4         0   89   4.5      170.0     3.800000     0.500000   0.200000   \n",
              "..      ...  ...   ...        ...          ...          ...        ...   \n",
              "274       1   63  14.6      202.0    13.000000     0.400000   1.200000   \n",
              "275       0   89  19.7      158.0     6.200478     1.186538   0.605742   \n",
              "276       1   53   5.3      224.0     3.400000     1.400000   0.500000   \n",
              "277       1   30   8.2      211.0     6.200478     1.186538   0.605742   \n",
              "278       0   82   5.1      166.0     6.200478     1.186538   0.605742   \n",
              "\n",
              "     Eosinophils  Basophils    CRP    AST   ALT       ALP        GGT  \\\n",
              "0       0.000000   0.000000   87.9   68.0  41.0  89.00000  63.000000   \n",
              "1       0.000000   0.000000  174.3  118.0  95.0  59.00000  77.000000   \n",
              "2       0.000000   0.000000   43.8   20.0  26.0  80.00000  16.000000   \n",
              "3       0.055024   0.014423    6.3   31.0  16.0  89.89313  82.477941   \n",
              "4       0.000000   0.000000  133.6   57.0  17.0  81.00000  19.000000   \n",
              "..           ...        ...    ...    ...   ...       ...        ...   \n",
              "274     0.000000   0.000000  250.6   65.0  87.0  65.00000  37.000000   \n",
              "275     0.055024   0.014423    3.0   26.0  17.0  89.89313  82.477941   \n",
              "276     0.000000   0.000000    7.8   36.0  41.0  89.89313  82.477941   \n",
              "277     0.055024   0.014423   12.4   35.0  41.0  56.00000  17.000000   \n",
              "278     0.055024   0.014423  112.6   46.0  17.0  58.00000  18.000000   \n",
              "\n",
              "            LDH  Class  \n",
              "0    606.000000      1  \n",
              "1    808.000000      1  \n",
              "2    235.000000      0  \n",
              "3    380.448454      0  \n",
              "4    626.000000      1  \n",
              "..          ...    ...  \n",
              "274  416.000000      1  \n",
              "275  275.000000      0  \n",
              "276  263.000000      1  \n",
              "277  209.000000      0  \n",
              "278  524.000000      1  \n",
              "\n",
              "[279 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b298a598-25be-4661-bb3f-bc969a672106\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>GENDER</th>\n",
              "      <th>AGE</th>\n",
              "      <th>WBC</th>\n",
              "      <th>Platelets</th>\n",
              "      <th>Neutrophils</th>\n",
              "      <th>Lymphocytes</th>\n",
              "      <th>Monocytes</th>\n",
              "      <th>Eosinophils</th>\n",
              "      <th>Basophils</th>\n",
              "      <th>CRP</th>\n",
              "      <th>AST</th>\n",
              "      <th>ALT</th>\n",
              "      <th>ALP</th>\n",
              "      <th>GGT</th>\n",
              "      <th>LDH</th>\n",
              "      <th>Class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>70</td>\n",
              "      <td>4.9</td>\n",
              "      <td>145.0</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>0.700000</td>\n",
              "      <td>0.300000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>87.9</td>\n",
              "      <td>68.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>89.00000</td>\n",
              "      <td>63.000000</td>\n",
              "      <td>606.000000</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>61</td>\n",
              "      <td>11.3</td>\n",
              "      <td>166.0</td>\n",
              "      <td>10.700000</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.100000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>174.3</td>\n",
              "      <td>118.0</td>\n",
              "      <td>95.0</td>\n",
              "      <td>59.00000</td>\n",
              "      <td>77.000000</td>\n",
              "      <td>808.000000</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>70</td>\n",
              "      <td>15.8</td>\n",
              "      <td>202.0</td>\n",
              "      <td>13.900000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.800000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>43.8</td>\n",
              "      <td>20.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>80.00000</td>\n",
              "      <td>16.000000</td>\n",
              "      <td>235.000000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>85</td>\n",
              "      <td>10.6</td>\n",
              "      <td>227.0</td>\n",
              "      <td>6.200478</td>\n",
              "      <td>1.186538</td>\n",
              "      <td>0.605742</td>\n",
              "      <td>0.055024</td>\n",
              "      <td>0.014423</td>\n",
              "      <td>6.3</td>\n",
              "      <td>31.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>89.89313</td>\n",
              "      <td>82.477941</td>\n",
              "      <td>380.448454</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>89</td>\n",
              "      <td>4.5</td>\n",
              "      <td>170.0</td>\n",
              "      <td>3.800000</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.200000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>133.6</td>\n",
              "      <td>57.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>81.00000</td>\n",
              "      <td>19.000000</td>\n",
              "      <td>626.000000</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>274</th>\n",
              "      <td>1</td>\n",
              "      <td>63</td>\n",
              "      <td>14.6</td>\n",
              "      <td>202.0</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>0.400000</td>\n",
              "      <td>1.200000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>250.6</td>\n",
              "      <td>65.0</td>\n",
              "      <td>87.0</td>\n",
              "      <td>65.00000</td>\n",
              "      <td>37.000000</td>\n",
              "      <td>416.000000</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>275</th>\n",
              "      <td>0</td>\n",
              "      <td>89</td>\n",
              "      <td>19.7</td>\n",
              "      <td>158.0</td>\n",
              "      <td>6.200478</td>\n",
              "      <td>1.186538</td>\n",
              "      <td>0.605742</td>\n",
              "      <td>0.055024</td>\n",
              "      <td>0.014423</td>\n",
              "      <td>3.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>89.89313</td>\n",
              "      <td>82.477941</td>\n",
              "      <td>275.000000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>276</th>\n",
              "      <td>1</td>\n",
              "      <td>53</td>\n",
              "      <td>5.3</td>\n",
              "      <td>224.0</td>\n",
              "      <td>3.400000</td>\n",
              "      <td>1.400000</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>7.8</td>\n",
              "      <td>36.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>89.89313</td>\n",
              "      <td>82.477941</td>\n",
              "      <td>263.000000</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>277</th>\n",
              "      <td>1</td>\n",
              "      <td>30</td>\n",
              "      <td>8.2</td>\n",
              "      <td>211.0</td>\n",
              "      <td>6.200478</td>\n",
              "      <td>1.186538</td>\n",
              "      <td>0.605742</td>\n",
              "      <td>0.055024</td>\n",
              "      <td>0.014423</td>\n",
              "      <td>12.4</td>\n",
              "      <td>35.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>56.00000</td>\n",
              "      <td>17.000000</td>\n",
              "      <td>209.000000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>278</th>\n",
              "      <td>0</td>\n",
              "      <td>82</td>\n",
              "      <td>5.1</td>\n",
              "      <td>166.0</td>\n",
              "      <td>6.200478</td>\n",
              "      <td>1.186538</td>\n",
              "      <td>0.605742</td>\n",
              "      <td>0.055024</td>\n",
              "      <td>0.014423</td>\n",
              "      <td>112.6</td>\n",
              "      <td>46.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>58.00000</td>\n",
              "      <td>18.000000</td>\n",
              "      <td>524.000000</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>279 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b298a598-25be-4661-bb3f-bc969a672106')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b298a598-25be-4661-bb3f-bc969a672106 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b298a598-25be-4661-bb3f-bc969a672106');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-715a53de-5bfb-4f0c-9e03-a8fc5e4263ac\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-715a53de-5bfb-4f0c-9e03-a8fc5e4263ac')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-715a53de-5bfb-4f0c-9e03-a8fc5e4263ac button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_8a2da6a9-8467-4738-a3ec-b72e63485834\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_8a2da6a9-8467-4738-a3ec-b72e63485834 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 279,\n  \"fields\": [\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 0,\n        \"max\": 98,\n        \"num_unique_values\": 70,\n        \"samples\": [\n          86,\n          70\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"WBC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.855353347526425,\n        \"min\": 1.1,\n        \"max\": 29.2,\n        \"num_unique_values\": 124,\n        \"samples\": [\n          5.8,\n          14.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Platelets\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101.1741776222978,\n        \"min\": 20.0,\n        \"max\": 620.0,\n        \"num_unique_values\": 177,\n        \"samples\": [\n          175.0,\n          109.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Neutrophils\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.609225764517342,\n        \"min\": 0.5,\n        \"max\": 26.4,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          3.9,\n          3.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lymphocytes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6958828244525176,\n        \"min\": 0.2,\n        \"max\": 7.2,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          0.4,\n          3.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monocytes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3546865575814026,\n        \"min\": 0.0,\n        \"max\": 3.2,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          2.5,\n          3.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Eosinophils\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11438331493355942,\n        \"min\": 0.0,\n        \"max\": 1.3,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.4,\n          0.05502392344497608\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Basophils\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.033753804434163356,\n        \"min\": 0.0,\n        \"max\": 0.3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.014423076923076924,\n          0.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CRP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 94.42140575151268,\n        \"min\": 0.1,\n        \"max\": 478.0,\n        \"num_unique_values\": 247,\n        \"samples\": [\n          217.9,\n          85.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AST\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57.61279669584917,\n        \"min\": 11.0,\n        \"max\": 550.0,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          104.0,\n          11.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ALT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 45.5032315025435,\n        \"min\": 9.0,\n        \"max\": 335.0,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          137.0,\n          41.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ALP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 60.922480045386806,\n        \"min\": 34.0,\n        \"max\": 838.0,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          81.0,\n          148.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GGT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 92.4748446025042,\n        \"min\": 10.0,\n        \"max\": 839.0,\n        \"num_unique_values\": 79,\n        \"samples\": [\n          839.0,\n          63.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LDH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 161.62967247232513,\n        \"min\": 98.0,\n        \"max\": 1195.0,\n        \"num_unique_values\": 149,\n        \"samples\": [\n          346.0,\n          258.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Class\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 218
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.corr()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 571
        },
        "id": "qKj3F_lKyHki",
        "outputId": "85ab4911-a97b-48d9-ac3a-f80ff877f671"
      },
      "execution_count": 219,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               GENDER       AGE       WBC  Platelets  Neutrophils  \\\n",
              "GENDER       1.000000  0.035894  0.035889  -0.065346     0.070735   \n",
              "AGE          0.035894  1.000000  0.102588  -0.169922     0.097470   \n",
              "WBC          0.035889  0.102588  1.000000   0.410903     0.758878   \n",
              "Platelets   -0.065346 -0.169922  0.410903   1.000000     0.260769   \n",
              "Neutrophils  0.070735  0.097470  0.758878   0.260769     1.000000   \n",
              "Lymphocytes -0.177372 -0.216184  0.123494   0.144519    -0.075173   \n",
              "Monocytes   -0.026120  0.027151  0.456789   0.258594     0.434948   \n",
              "Eosinophils -0.060489 -0.090157  0.136169   0.204349     0.060134   \n",
              "Basophils   -0.023782 -0.060169  0.400155   0.272852     0.432550   \n",
              "CRP          0.278734  0.112145  0.257293   0.083421     0.314468   \n",
              "AST          0.143065 -0.000950  0.166680   0.030870     0.223467   \n",
              "ALT          0.112718 -0.072027  0.070221   0.145952     0.113473   \n",
              "ALP         -0.082520  0.003720  0.078031   0.127368     0.025206   \n",
              "GGT          0.047291 -0.015985  0.059217   0.157953     0.058913   \n",
              "LDH          0.101136  0.190807  0.314487   0.111204     0.265492   \n",
              "Class        0.249735  0.087642 -0.195186  -0.047264    -0.126156   \n",
              "\n",
              "             Lymphocytes  Monocytes  Eosinophils  Basophils       CRP  \\\n",
              "GENDER         -0.177372  -0.026120    -0.060489  -0.023782  0.278734   \n",
              "AGE            -0.216184   0.027151    -0.090157  -0.060169  0.112145   \n",
              "WBC             0.123494   0.456789     0.136169   0.400155  0.257293   \n",
              "Platelets       0.144519   0.258594     0.204349   0.272852  0.083421   \n",
              "Neutrophils    -0.075173   0.434948     0.060134   0.432550  0.314468   \n",
              "Lymphocytes     1.000000   0.305034     0.264160   0.249726 -0.287219   \n",
              "Monocytes       0.305034   1.000000     0.230053   0.367346 -0.059096   \n",
              "Eosinophils     0.264160   0.230053     1.000000   0.424455 -0.034592   \n",
              "Basophils       0.249726   0.367346     0.424455   1.000000  0.013184   \n",
              "CRP            -0.287219  -0.059096    -0.034592   0.013184  1.000000   \n",
              "AST            -0.155787  -0.069367     0.035940   0.182233  0.288562   \n",
              "ALT            -0.120017  -0.016131     0.019007   0.151361  0.081042   \n",
              "ALP             0.026265   0.012277     0.096911   0.015153 -0.004062   \n",
              "GGT            -0.044373  -0.052194     0.016562   0.032162  0.059820   \n",
              "LDH            -0.217812  -0.120833    -0.091789   0.010167  0.399888   \n",
              "Class          -0.209296  -0.217439    -0.175244  -0.111718  0.226312   \n",
              "\n",
              "                  AST       ALT       ALP       GGT       LDH     Class  \n",
              "GENDER       0.143065  0.112718 -0.082520  0.047291  0.101136  0.249735  \n",
              "AGE         -0.000950 -0.072027  0.003720 -0.015985  0.190807  0.087642  \n",
              "WBC          0.166680  0.070221  0.078031  0.059217  0.314487 -0.195186  \n",
              "Platelets    0.030870  0.145952  0.127368  0.157953  0.111204 -0.047264  \n",
              "Neutrophils  0.223467  0.113473  0.025206  0.058913  0.265492 -0.126156  \n",
              "Lymphocytes -0.155787 -0.120017  0.026265 -0.044373 -0.217812 -0.209296  \n",
              "Monocytes   -0.069367 -0.016131  0.012277 -0.052194 -0.120833 -0.217439  \n",
              "Eosinophils  0.035940  0.019007  0.096911  0.016562 -0.091789 -0.175244  \n",
              "Basophils    0.182233  0.151361  0.015153  0.032162  0.010167 -0.111718  \n",
              "CRP          0.288562  0.081042 -0.004062  0.059820  0.399888  0.226312  \n",
              "AST          1.000000  0.744532  0.251828  0.423482  0.478691  0.214309  \n",
              "ALT          0.744532  1.000000  0.202903  0.423340  0.242456  0.202167  \n",
              "ALP          0.251828  0.202903  1.000000  0.811801  0.041118 -0.047177  \n",
              "GGT          0.423482  0.423340  0.811801  1.000000  0.140410  0.044819  \n",
              "LDH          0.478691  0.242456  0.041118  0.140410  1.000000  0.302432  \n",
              "Class        0.214309  0.202167 -0.047177  0.044819  0.302432  1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f27837a9-c879-421f-b918-7212d2485d88\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>GENDER</th>\n",
              "      <th>AGE</th>\n",
              "      <th>WBC</th>\n",
              "      <th>Platelets</th>\n",
              "      <th>Neutrophils</th>\n",
              "      <th>Lymphocytes</th>\n",
              "      <th>Monocytes</th>\n",
              "      <th>Eosinophils</th>\n",
              "      <th>Basophils</th>\n",
              "      <th>CRP</th>\n",
              "      <th>AST</th>\n",
              "      <th>ALT</th>\n",
              "      <th>ALP</th>\n",
              "      <th>GGT</th>\n",
              "      <th>LDH</th>\n",
              "      <th>Class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>GENDER</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.035894</td>\n",
              "      <td>0.035889</td>\n",
              "      <td>-0.065346</td>\n",
              "      <td>0.070735</td>\n",
              "      <td>-0.177372</td>\n",
              "      <td>-0.026120</td>\n",
              "      <td>-0.060489</td>\n",
              "      <td>-0.023782</td>\n",
              "      <td>0.278734</td>\n",
              "      <td>0.143065</td>\n",
              "      <td>0.112718</td>\n",
              "      <td>-0.082520</td>\n",
              "      <td>0.047291</td>\n",
              "      <td>0.101136</td>\n",
              "      <td>0.249735</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AGE</th>\n",
              "      <td>0.035894</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.102588</td>\n",
              "      <td>-0.169922</td>\n",
              "      <td>0.097470</td>\n",
              "      <td>-0.216184</td>\n",
              "      <td>0.027151</td>\n",
              "      <td>-0.090157</td>\n",
              "      <td>-0.060169</td>\n",
              "      <td>0.112145</td>\n",
              "      <td>-0.000950</td>\n",
              "      <td>-0.072027</td>\n",
              "      <td>0.003720</td>\n",
              "      <td>-0.015985</td>\n",
              "      <td>0.190807</td>\n",
              "      <td>0.087642</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>WBC</th>\n",
              "      <td>0.035889</td>\n",
              "      <td>0.102588</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.410903</td>\n",
              "      <td>0.758878</td>\n",
              "      <td>0.123494</td>\n",
              "      <td>0.456789</td>\n",
              "      <td>0.136169</td>\n",
              "      <td>0.400155</td>\n",
              "      <td>0.257293</td>\n",
              "      <td>0.166680</td>\n",
              "      <td>0.070221</td>\n",
              "      <td>0.078031</td>\n",
              "      <td>0.059217</td>\n",
              "      <td>0.314487</td>\n",
              "      <td>-0.195186</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platelets</th>\n",
              "      <td>-0.065346</td>\n",
              "      <td>-0.169922</td>\n",
              "      <td>0.410903</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.260769</td>\n",
              "      <td>0.144519</td>\n",
              "      <td>0.258594</td>\n",
              "      <td>0.204349</td>\n",
              "      <td>0.272852</td>\n",
              "      <td>0.083421</td>\n",
              "      <td>0.030870</td>\n",
              "      <td>0.145952</td>\n",
              "      <td>0.127368</td>\n",
              "      <td>0.157953</td>\n",
              "      <td>0.111204</td>\n",
              "      <td>-0.047264</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Neutrophils</th>\n",
              "      <td>0.070735</td>\n",
              "      <td>0.097470</td>\n",
              "      <td>0.758878</td>\n",
              "      <td>0.260769</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.075173</td>\n",
              "      <td>0.434948</td>\n",
              "      <td>0.060134</td>\n",
              "      <td>0.432550</td>\n",
              "      <td>0.314468</td>\n",
              "      <td>0.223467</td>\n",
              "      <td>0.113473</td>\n",
              "      <td>0.025206</td>\n",
              "      <td>0.058913</td>\n",
              "      <td>0.265492</td>\n",
              "      <td>-0.126156</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lymphocytes</th>\n",
              "      <td>-0.177372</td>\n",
              "      <td>-0.216184</td>\n",
              "      <td>0.123494</td>\n",
              "      <td>0.144519</td>\n",
              "      <td>-0.075173</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.305034</td>\n",
              "      <td>0.264160</td>\n",
              "      <td>0.249726</td>\n",
              "      <td>-0.287219</td>\n",
              "      <td>-0.155787</td>\n",
              "      <td>-0.120017</td>\n",
              "      <td>0.026265</td>\n",
              "      <td>-0.044373</td>\n",
              "      <td>-0.217812</td>\n",
              "      <td>-0.209296</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Monocytes</th>\n",
              "      <td>-0.026120</td>\n",
              "      <td>0.027151</td>\n",
              "      <td>0.456789</td>\n",
              "      <td>0.258594</td>\n",
              "      <td>0.434948</td>\n",
              "      <td>0.305034</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.230053</td>\n",
              "      <td>0.367346</td>\n",
              "      <td>-0.059096</td>\n",
              "      <td>-0.069367</td>\n",
              "      <td>-0.016131</td>\n",
              "      <td>0.012277</td>\n",
              "      <td>-0.052194</td>\n",
              "      <td>-0.120833</td>\n",
              "      <td>-0.217439</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Eosinophils</th>\n",
              "      <td>-0.060489</td>\n",
              "      <td>-0.090157</td>\n",
              "      <td>0.136169</td>\n",
              "      <td>0.204349</td>\n",
              "      <td>0.060134</td>\n",
              "      <td>0.264160</td>\n",
              "      <td>0.230053</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.424455</td>\n",
              "      <td>-0.034592</td>\n",
              "      <td>0.035940</td>\n",
              "      <td>0.019007</td>\n",
              "      <td>0.096911</td>\n",
              "      <td>0.016562</td>\n",
              "      <td>-0.091789</td>\n",
              "      <td>-0.175244</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Basophils</th>\n",
              "      <td>-0.023782</td>\n",
              "      <td>-0.060169</td>\n",
              "      <td>0.400155</td>\n",
              "      <td>0.272852</td>\n",
              "      <td>0.432550</td>\n",
              "      <td>0.249726</td>\n",
              "      <td>0.367346</td>\n",
              "      <td>0.424455</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.013184</td>\n",
              "      <td>0.182233</td>\n",
              "      <td>0.151361</td>\n",
              "      <td>0.015153</td>\n",
              "      <td>0.032162</td>\n",
              "      <td>0.010167</td>\n",
              "      <td>-0.111718</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CRP</th>\n",
              "      <td>0.278734</td>\n",
              "      <td>0.112145</td>\n",
              "      <td>0.257293</td>\n",
              "      <td>0.083421</td>\n",
              "      <td>0.314468</td>\n",
              "      <td>-0.287219</td>\n",
              "      <td>-0.059096</td>\n",
              "      <td>-0.034592</td>\n",
              "      <td>0.013184</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.288562</td>\n",
              "      <td>0.081042</td>\n",
              "      <td>-0.004062</td>\n",
              "      <td>0.059820</td>\n",
              "      <td>0.399888</td>\n",
              "      <td>0.226312</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AST</th>\n",
              "      <td>0.143065</td>\n",
              "      <td>-0.000950</td>\n",
              "      <td>0.166680</td>\n",
              "      <td>0.030870</td>\n",
              "      <td>0.223467</td>\n",
              "      <td>-0.155787</td>\n",
              "      <td>-0.069367</td>\n",
              "      <td>0.035940</td>\n",
              "      <td>0.182233</td>\n",
              "      <td>0.288562</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.744532</td>\n",
              "      <td>0.251828</td>\n",
              "      <td>0.423482</td>\n",
              "      <td>0.478691</td>\n",
              "      <td>0.214309</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ALT</th>\n",
              "      <td>0.112718</td>\n",
              "      <td>-0.072027</td>\n",
              "      <td>0.070221</td>\n",
              "      <td>0.145952</td>\n",
              "      <td>0.113473</td>\n",
              "      <td>-0.120017</td>\n",
              "      <td>-0.016131</td>\n",
              "      <td>0.019007</td>\n",
              "      <td>0.151361</td>\n",
              "      <td>0.081042</td>\n",
              "      <td>0.744532</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.202903</td>\n",
              "      <td>0.423340</td>\n",
              "      <td>0.242456</td>\n",
              "      <td>0.202167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ALP</th>\n",
              "      <td>-0.082520</td>\n",
              "      <td>0.003720</td>\n",
              "      <td>0.078031</td>\n",
              "      <td>0.127368</td>\n",
              "      <td>0.025206</td>\n",
              "      <td>0.026265</td>\n",
              "      <td>0.012277</td>\n",
              "      <td>0.096911</td>\n",
              "      <td>0.015153</td>\n",
              "      <td>-0.004062</td>\n",
              "      <td>0.251828</td>\n",
              "      <td>0.202903</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.811801</td>\n",
              "      <td>0.041118</td>\n",
              "      <td>-0.047177</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GGT</th>\n",
              "      <td>0.047291</td>\n",
              "      <td>-0.015985</td>\n",
              "      <td>0.059217</td>\n",
              "      <td>0.157953</td>\n",
              "      <td>0.058913</td>\n",
              "      <td>-0.044373</td>\n",
              "      <td>-0.052194</td>\n",
              "      <td>0.016562</td>\n",
              "      <td>0.032162</td>\n",
              "      <td>0.059820</td>\n",
              "      <td>0.423482</td>\n",
              "      <td>0.423340</td>\n",
              "      <td>0.811801</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.140410</td>\n",
              "      <td>0.044819</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LDH</th>\n",
              "      <td>0.101136</td>\n",
              "      <td>0.190807</td>\n",
              "      <td>0.314487</td>\n",
              "      <td>0.111204</td>\n",
              "      <td>0.265492</td>\n",
              "      <td>-0.217812</td>\n",
              "      <td>-0.120833</td>\n",
              "      <td>-0.091789</td>\n",
              "      <td>0.010167</td>\n",
              "      <td>0.399888</td>\n",
              "      <td>0.478691</td>\n",
              "      <td>0.242456</td>\n",
              "      <td>0.041118</td>\n",
              "      <td>0.140410</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.302432</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Class</th>\n",
              "      <td>0.249735</td>\n",
              "      <td>0.087642</td>\n",
              "      <td>-0.195186</td>\n",
              "      <td>-0.047264</td>\n",
              "      <td>-0.126156</td>\n",
              "      <td>-0.209296</td>\n",
              "      <td>-0.217439</td>\n",
              "      <td>-0.175244</td>\n",
              "      <td>-0.111718</td>\n",
              "      <td>0.226312</td>\n",
              "      <td>0.214309</td>\n",
              "      <td>0.202167</td>\n",
              "      <td>-0.047177</td>\n",
              "      <td>0.044819</td>\n",
              "      <td>0.302432</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f27837a9-c879-421f-b918-7212d2485d88')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f27837a9-c879-421f-b918-7212d2485d88 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f27837a9-c879-421f-b918-7212d2485d88');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-484c01ee-d73a-4852-b7a8-183116fde326\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-484c01ee-d73a-4852-b7a8-183116fde326')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-484c01ee-d73a-4852-b7a8-183116fde326 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 16,\n  \"fields\": [\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2674214102654199,\n        \"min\": -0.1773718273727169,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          1.0,\n          0.03589414073317316,\n          -0.1773718273727169\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2714115967580946,\n        \"min\": -0.21618400824031317,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.03589414073317316,\n          1.0,\n          -0.21618400824031317\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"WBC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.29607414901545265,\n        \"min\": -0.19518561610467455,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.035888667896271056,\n          0.10258843235745205,\n          0.12349380713514099\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Platelets\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.26124835951845166,\n        \"min\": -0.16992173557556972,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          -0.06534574659322166,\n          -0.16992173557556972,\n          0.1445189935070514\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Neutrophils\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2986772033571614,\n        \"min\": -0.12615638548410943,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.07073500511922955,\n          0.09747047298932593,\n          -0.07517283433265601\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lymphocytes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3201034442270222,\n        \"min\": -0.28721899973100434,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          -0.1773718273727169,\n          -0.21618400824031317,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monocytes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3076776880671019,\n        \"min\": -0.2174390644286407,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          -0.026119576864359534,\n          0.027151207991602613,\n          0.30503352672395145\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Eosinophils\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.27943701959807593,\n        \"min\": -0.17524395739888743,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          -0.06048854082689343,\n          -0.09015662162403026,\n          0.26415965707980804\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Basophils\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.27924695131520777,\n        \"min\": -0.11171787328313347,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          -0.023782117019469053,\n          -0.060169483112712946,\n          0.24972627697999764\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CRP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2814796298320229,\n        \"min\": -0.28721899973100434,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.27873371239662603,\n          0.11214510735466152,\n          -0.28721899973100434\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AST\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.29880399574284056,\n        \"min\": -0.1557870910910614,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.14306524607336257,\n          -0.0009496725765088707,\n          -0.1557870910910614\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ALT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.29380716411651403,\n        \"min\": -0.12001656743003321,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.11271813848146757,\n          -0.07202663214968097,\n          -0.12001656743003321\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ALP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.30534672805913965,\n        \"min\": -0.08251995058587872,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          -0.08251995058587872,\n          0.003719774687555356,\n          0.026265257985495043\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GGT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.31176112617424795,\n        \"min\": -0.05219413147042154,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.04729131558555217,\n          -0.015984836659318262,\n          -0.044372926724739185\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LDH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.286643409354275,\n        \"min\": -0.21781178083924355,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.10113577447888786,\n          0.19080727795299202,\n          -0.21781178083924355\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Class\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3060062253459691,\n        \"min\": -0.2174390644286407,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.24973490145533664,\n          0.08764175995129675,\n          -0.20929638729236993\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 219
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X = df.iloc[:, 0:15]\n",
        "y = df['Class']"
      ],
      "metadata": {
        "id": "HDit1M1JyPsp"
      },
      "execution_count": 231,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "imputer = SimpleImputer(strategy='mean')\n",
        "X = imputer.fit_transform(X)"
      ],
      "metadata": {
        "id": "aM9Dpy-6WOtx"
      },
      "execution_count": 232,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(len(X))\n",
        "print(len(y))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "R3jAhlj-Wrru",
        "outputId": "9d209c88-3aa0-414e-bcaf-8d394d78d54c"
      },
      "execution_count": 240,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "279\n",
            "279\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"
      ],
      "metadata": {
        "id": "AVla0YMDyxbg"
      },
      "execution_count": 233,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LogisticRegression\n"
      ],
      "metadata": {
        "id": "2rQn2znjzN10"
      },
      "execution_count": 234,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "li = LogisticRegression()\n",
        "li.fit(X_train, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 213
        },
        "id": "argo9FE_4ksZ",
        "outputId": "5a75b4cf-41c5-4788-eb84-9463edbd5bdc"
      },
      "execution_count": 236,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "  n_iter_i = _check_optimize_result(\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LogisticRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 236
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_test_pred=li.predict(X_test)"
      ],
      "metadata": {
        "id": "bBBHiB6LVhRC"
      },
      "execution_count": 237,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import accuracy_score"
      ],
      "metadata": {
        "id": "oHQ9km66V0Cg"
      },
      "execution_count": 238,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "accuracy_score(y_test,y_test_pred)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FlLomue6V0m-",
        "outputId": "644b9339-654c-496e-9063-35cfcbd22e70"
      },
      "execution_count": 242,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.6607142857142857"
            ]
          },
          "metadata": {},
          "execution_count": 242
        }
      ]
    }
  ]
}